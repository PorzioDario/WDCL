//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\porziod\Documents\Visual Studio 2015\Projects\WDCL\WDCL\WDCL.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WDCL {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class WDCLLexer : Lexer {
	public const int
		T__0=1, T__1=2, NOT=3, AND=4, OR=5, EQ=6, NOTEQ=7, LTEQ=8, LT=9, GTEQ=10, 
		GT=11, IN=12, COMMA=13, PLUS_OP=14, MINUS_OP=15, MUL_OP=16, DIV_OP=17, 
		MOD_OP=18, POW_OP=19, TRUE=20, FALSE=21, ID=22, INT=23, FLOAT=24, DATE=25, 
		STRING=26, COMMENT=27, WS=28, UNKNOWN_CHAR=29;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", "LT", "GTEQ", 
		"GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", "MOD_OP", 
		"POW_OP", "TRUE", "FALSE", "ID", "INT", "FLOAT", "DATE", "STRING", "COMMENT", 
		"WS", "UNKNOWN_CHAR", "ESC_SEQ", "DIGIT", "ID_LETTER", "A", "D", "E", 
		"F", "I", "L", "N", "O", "R", "S", "T", "U"
	};


		public static int COMMENTS = 1;
		public static int WHITE_SPACE = 2;
		public static int INVALID_CHAR = 3;

		public bool isACondition(string id) { return Identifiers.isCondition(id); }


	public WDCLLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", null, null, null, "'='", "'<>'", "'<='", "'<'", "'>='", 
		"'>'", null, "','", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", "LT", "GTEQ", 
		"GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", "MOD_OP", 
		"POW_OP", "TRUE", "FALSE", "ID", "INT", "FLOAT", "DATE", "STRING", "COMMENT", 
		"WS", "UNKNOWN_CHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "WDCL.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 21 : ID_action(_localctx, actionIndex); break;

		case 26 : COMMENT_action(_localctx, actionIndex); break;

		case 27 : WS_action(_localctx, actionIndex); break;

		case 28 : UNKNOWN_CHAR_action(_localctx, actionIndex); break;
		}
	}
	private void ID_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: 
					if(isACondition(Text)) { 
						Type = WDCLParser.BOOLID;
					}
					else {
						Type = WDCLParser.EXPRID;
					}
				 break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: _channel = COMMENTS; break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: _channel = WHITE_SPACE; break;
		}
	}
	private void UNKNOWN_CHAR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: _channel = INVALID_CHAR; break;
		}
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1F\x103\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\a\x17\x99\n\x17\f\x17"+
		"\xE\x17\x9C\v\x17\x3\x17\x3\x17\x3\x18\x6\x18\xA1\n\x18\r\x18\xE\x18\xA2"+
		"\x3\x19\x6\x19\xA6\n\x19\r\x19\xE\x19\xA7\x3\x19\x3\x19\x6\x19\xAC\n\x19"+
		"\r\x19\xE\x19\xAD\x3\x19\x3\x19\x6\x19\xB2\n\x19\r\x19\xE\x19\xB3\x5\x19"+
		"\xB6\n\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\a\x1B\xC6\n\x1B\f\x1B\xE\x1B\xC9"+
		"\v\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\a\x1C\xD1\n\x1C\f\x1C"+
		"\xE\x1C\xD4\v\x1C\x3\x1C\x5\x1C\xD7\n\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F"+
		"\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'"+
		"\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x2\x2\x2.\x3\x2"+
		"\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2\x2?\x2\x2\x41\x2\x2\x43"+
		"\x2\x2\x45\x2\x2G\x2\x2I\x2\x2K\x2\x2M\x2\x2O\x2\x2Q\x2\x2S\x2\x2U\x2"+
		"\x2W\x2\x2Y\x2\x2\x3\x2\x14\x4\x2$$^^\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF"+
		"\"\"\n\x2$$))^^\x64\x64hhppttvv\x3\x2\x32;\x5\x2\x43\\\x61\x61\x63|\x4"+
		"\x2\x43\x43\x63\x63\x4\x2\x46\x46\x66\x66\x4\x2GGgg\x4\x2HHhh\x4\x2KK"+
		"kk\x4\x2NNnn\x4\x2PPpp\x4\x2QQqq\x4\x2TTtt\x4\x2UUuu\x4\x2VVvv\x4\x2W"+
		"Www\xFE\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
		"\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x3[\x3\x2\x2\x2\x5]\x3\x2\x2\x2\a_\x3"+
		"\x2\x2\x2\t\x63\x3\x2\x2\x2\vg\x3\x2\x2\x2\rj\x3\x2\x2\x2\xFl\x3\x2\x2"+
		"\x2\x11o\x3\x2\x2\x2\x13r\x3\x2\x2\x2\x15t\x3\x2\x2\x2\x17w\x3\x2\x2\x2"+
		"\x19y\x3\x2\x2\x2\x1B|\x3\x2\x2\x2\x1D~\x3\x2\x2\x2\x1F\x80\x3\x2\x2\x2"+
		"!\x82\x3\x2\x2\x2#\x84\x3\x2\x2\x2%\x86\x3\x2\x2\x2\'\x88\x3\x2\x2\x2"+
		")\x8A\x3\x2\x2\x2+\x8F\x3\x2\x2\x2-\x95\x3\x2\x2\x2/\xA0\x3\x2\x2\x2\x31"+
		"\xB5\x3\x2\x2\x2\x33\xB7\x3\x2\x2\x2\x35\xC2\x3\x2\x2\x2\x37\xCC\x3\x2"+
		"\x2\x2\x39\xDC\x3\x2\x2\x2;\xE0\x3\x2\x2\x2=\xE4\x3\x2\x2\x2?\xE7\x3\x2"+
		"\x2\x2\x41\xE9\x3\x2\x2\x2\x43\xEB\x3\x2\x2\x2\x45\xED\x3\x2\x2\x2G\xEF"+
		"\x3\x2\x2\x2I\xF1\x3\x2\x2\x2K\xF3\x3\x2\x2\x2M\xF5\x3\x2\x2\x2O\xF7\x3"+
		"\x2\x2\x2Q\xF9\x3\x2\x2\x2S\xFB\x3\x2\x2\x2U\xFD\x3\x2\x2\x2W\xFF\x3\x2"+
		"\x2\x2Y\x101\x3\x2\x2\x2[\\\a*\x2\x2\\\x4\x3\x2\x2\x2]^\a+\x2\x2^\x6\x3"+
		"\x2\x2\x2_`\x5O(\x2`\x61\x5Q)\x2\x61\x62\x5W,\x2\x62\b\x3\x2\x2\x2\x63"+
		"\x64\x5\x43\"\x2\x64\x65\x5O(\x2\x65\x66\x5\x45#\x2\x66\n\x3\x2\x2\x2"+
		"gh\x5Q)\x2hi\x5S*\x2i\f\x3\x2\x2\x2jk\a?\x2\x2k\xE\x3\x2\x2\x2lm\a>\x2"+
		"\x2mn\a@\x2\x2n\x10\x3\x2\x2\x2op\a>\x2\x2pq\a?\x2\x2q\x12\x3\x2\x2\x2"+
		"rs\a>\x2\x2s\x14\x3\x2\x2\x2tu\a@\x2\x2uv\a?\x2\x2v\x16\x3\x2\x2\x2wx"+
		"\a@\x2\x2x\x18\x3\x2\x2\x2yz\x5K&\x2z{\x5O(\x2{\x1A\x3\x2\x2\x2|}\a.\x2"+
		"\x2}\x1C\x3\x2\x2\x2~\x7F\a-\x2\x2\x7F\x1E\x3\x2\x2\x2\x80\x81\a/\x2\x2"+
		"\x81 \x3\x2\x2\x2\x82\x83\a,\x2\x2\x83\"\x3\x2\x2\x2\x84\x85\a\x31\x2"+
		"\x2\x85$\x3\x2\x2\x2\x86\x87\a\'\x2\x2\x87&\x3\x2\x2\x2\x88\x89\a`\x2"+
		"\x2\x89(\x3\x2\x2\x2\x8A\x8B\x5W,\x2\x8B\x8C\x5S*\x2\x8C\x8D\x5Y-\x2\x8D"+
		"\x8E\x5G$\x2\x8E*\x3\x2\x2\x2\x8F\x90\x5I%\x2\x90\x91\x5\x43\"\x2\x91"+
		"\x92\x5M\'\x2\x92\x93\x5U+\x2\x93\x94\x5G$\x2\x94,\x3\x2\x2\x2\x95\x9A"+
		"\x5\x41!\x2\x96\x99\x5\x41!\x2\x97\x99\x5? \x2\x98\x96\x3\x2\x2\x2\x98"+
		"\x97\x3\x2\x2\x2\x99\x9C\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9A\x9B\x3\x2"+
		"\x2\x2\x9B\x9D\x3\x2\x2\x2\x9C\x9A\x3\x2\x2\x2\x9D\x9E\b\x17\x2\x2\x9E"+
		".\x3\x2\x2\x2\x9F\xA1\x5? \x2\xA0\x9F\x3\x2\x2\x2\xA1\xA2\x3\x2\x2\x2"+
		"\xA2\xA0\x3\x2\x2\x2\xA2\xA3\x3\x2\x2\x2\xA3\x30\x3\x2\x2\x2\xA4\xA6\x5"+
		"? \x2\xA5\xA4\x3\x2\x2\x2\xA6\xA7\x3\x2\x2\x2\xA7\xA5\x3\x2\x2\x2\xA7"+
		"\xA8\x3\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\xAB\a\x30\x2\x2\xAA\xAC\x5? "+
		"\x2\xAB\xAA\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAB\x3\x2\x2\x2\xAD\xAE"+
		"\x3\x2\x2\x2\xAE\xB6\x3\x2\x2\x2\xAF\xB1\a\x30\x2\x2\xB0\xB2\x5? \x2\xB1"+
		"\xB0\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2"+
		"\x2\x2\xB4\xB6\x3\x2\x2\x2\xB5\xA5\x3\x2\x2\x2\xB5\xAF\x3\x2\x2\x2\xB6"+
		"\x32\x3\x2\x2\x2\xB7\xB8\x5? \x2\xB8\xB9\x5? \x2\xB9\xBA\x5? \x2\xBA\xBB"+
		"\x5? \x2\xBB\xBC\a\x31\x2\x2\xBC\xBD\x5? \x2\xBD\xBE\x5? \x2\xBE\xBF\a"+
		"\x31\x2\x2\xBF\xC0\x5? \x2\xC0\xC1\x5? \x2\xC1\x34\x3\x2\x2\x2\xC2\xC7"+
		"\a$\x2\x2\xC3\xC6\x5=\x1F\x2\xC4\xC6\n\x2\x2\x2\xC5\xC3\x3\x2\x2\x2\xC5"+
		"\xC4\x3\x2\x2\x2\xC6\xC9\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2"+
		"\x2\x2\xC8\xCA\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xCA\xCB\a$\x2\x2\xCB\x36"+
		"\x3\x2\x2\x2\xCC\xCD\a\x31\x2\x2\xCD\xCE\a\x31\x2\x2\xCE\xD2\x3\x2\x2"+
		"\x2\xCF\xD1\n\x3\x2\x2\xD0\xCF\x3\x2\x2\x2\xD1\xD4\x3\x2\x2\x2\xD2\xD0"+
		"\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD6\x3\x2\x2\x2\xD4\xD2\x3\x2\x2"+
		"\x2\xD5\xD7\a\xF\x2\x2\xD6\xD5\x3\x2\x2\x2\xD6\xD7\x3\x2\x2\x2\xD7\xD8"+
		"\x3\x2\x2\x2\xD8\xD9\a\f\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xDB\b\x1C\x3\x2"+
		"\xDB\x38\x3\x2\x2\x2\xDC\xDD\t\x4\x2\x2\xDD\xDE\x3\x2\x2\x2\xDE\xDF\b"+
		"\x1D\x4\x2\xDF:\x3\x2\x2\x2\xE0\xE1\v\x2\x2\x2\xE1\xE2\x3\x2\x2\x2\xE2"+
		"\xE3\b\x1E\x5\x2\xE3<\x3\x2\x2\x2\xE4\xE5\a^\x2\x2\xE5\xE6\t\x5\x2\x2"+
		"\xE6>\x3\x2\x2\x2\xE7\xE8\t\x6\x2\x2\xE8@\x3\x2\x2\x2\xE9\xEA\t\a\x2\x2"+
		"\xEA\x42\x3\x2\x2\x2\xEB\xEC\t\b\x2\x2\xEC\x44\x3\x2\x2\x2\xED\xEE\t\t"+
		"\x2\x2\xEE\x46\x3\x2\x2\x2\xEF\xF0\t\n\x2\x2\xF0H\x3\x2\x2\x2\xF1\xF2"+
		"\t\v\x2\x2\xF2J\x3\x2\x2\x2\xF3\xF4\t\f\x2\x2\xF4L\x3\x2\x2\x2\xF5\xF6"+
		"\t\r\x2\x2\xF6N\x3\x2\x2\x2\xF7\xF8\t\xE\x2\x2\xF8P\x3\x2\x2\x2\xF9\xFA"+
		"\t\xF\x2\x2\xFAR\x3\x2\x2\x2\xFB\xFC\t\x10\x2\x2\xFCT\x3\x2\x2\x2\xFD"+
		"\xFE\t\x11\x2\x2\xFEV\x3\x2\x2\x2\xFF\x100\t\x12\x2\x2\x100X\x3\x2\x2"+
		"\x2\x101\x102\t\x13\x2\x2\x102Z\x3\x2\x2\x2\xE\x2\x98\x9A\xA2\xA7\xAD"+
		"\xB3\xB5\xC5\xC7\xD2\xD6\x6\x3\x17\x2\x3\x1C\x3\x3\x1D\x4\x3\x1E\x5";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace WDCL
