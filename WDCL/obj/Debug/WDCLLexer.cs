//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\porziod\Documents\Visual Studio 2015\Projects\WDCL\WDCL\WDCL.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WDCL {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class WDCLLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, NOT=5, AND=6, OR=7, EQ=8, NOTEQ=9, LTEQ=10, 
		LT=11, GTEQ=12, GT=13, IN=14, COMMA=15, PLUS_OP=16, MINUS_OP=17, MUL_OP=18, 
		DIV_OP=19, MOD_OP=20, POW_OP=21, ID=22, INT=23, FLOAT=24, DATE=25, COMMENT=26, 
		WS=27, STRING=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", 
		"LT", "GTEQ", "GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", 
		"MOD_OP", "POW_OP", "ID", "INT", "FLOAT", "DATE", "DIGIT", "COMMENT", 
		"WS", "STRING", "ESC_SEQ"
	};


	public WDCLLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'true'", "'false'", "'('", "')'", "'NOT'", "'AND'", "'OR'", "'='", 
		"'<>'", "'<='", "'<'", "'>='", "'>'", "'IN'", "','", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", 
		"LT", "GTEQ", "GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", 
		"MOD_OP", "POW_OP", "ID", "INT", "FLOAT", "DATE", "COMMENT", "WS", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "WDCL.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xC0\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b"+
		"\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r"+
		"\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x5\x17"+
		"{\n\x17\x3\x17\a\x17~\n\x17\f\x17\xE\x17\x81\v\x17\x3\x18\x6\x18\x84\n"+
		"\x18\r\x18\xE\x18\x85\x3\x19\x6\x19\x89\n\x19\r\x19\xE\x19\x8A\x3\x19"+
		"\x3\x19\x6\x19\x8F\n\x19\r\x19\xE\x19\x90\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\a\x1C\xA4\n\x1C\f\x1C\xE\x1C\xA7\v\x1C\x3\x1C\x5"+
		"\x1C\xAA\n\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1E\x3\x1E\x3\x1E\a\x1E\xB7\n\x1E\f\x1E\xE\x1E\xBA\v\x1E\x3\x1E\x3"+
		"\x1E\x3\x1F\x3\x1F\x3\x1F\x2\x2\x2 \x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6"+
		"\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B"+
		"\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16"+
		"+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x2\x37\x2\x1C\x39"+
		"\x2\x1D;\x2\x1E=\x2\x2\x3\x2\t\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43"+
		"\\\x61\x61\x63|\x3\x2\x32;\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x4\x2$"+
		"$^^\n\x2$$))^^\x64\x64hhppttvv\xC5\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2"+
		"\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x37\x3\x2\x2"+
		"\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x3?\x3\x2\x2\x2\x5\x44\x3\x2\x2"+
		"\x2\aJ\x3\x2\x2\x2\tL\x3\x2\x2\x2\vN\x3\x2\x2\x2\rR\x3\x2\x2\x2\xFV\x3"+
		"\x2\x2\x2\x11Y\x3\x2\x2\x2\x13[\x3\x2\x2\x2\x15^\x3\x2\x2\x2\x17\x61\x3"+
		"\x2\x2\x2\x19\x63\x3\x2\x2\x2\x1B\x66\x3\x2\x2\x2\x1Dh\x3\x2\x2\x2\x1F"+
		"k\x3\x2\x2\x2!m\x3\x2\x2\x2#o\x3\x2\x2\x2%q\x3\x2\x2\x2\'s\x3\x2\x2\x2"+
		")u\x3\x2\x2\x2+w\x3\x2\x2\x2-z\x3\x2\x2\x2/\x83\x3\x2\x2\x2\x31\x88\x3"+
		"\x2\x2\x2\x33\x92\x3\x2\x2\x2\x35\x9D\x3\x2\x2\x2\x37\x9F\x3\x2\x2\x2"+
		"\x39\xAF\x3\x2\x2\x2;\xB3\x3\x2\x2\x2=\xBD\x3\x2\x2\x2?@\av\x2\x2@\x41"+
		"\at\x2\x2\x41\x42\aw\x2\x2\x42\x43\ag\x2\x2\x43\x4\x3\x2\x2\x2\x44\x45"+
		"\ah\x2\x2\x45\x46\a\x63\x2\x2\x46G\an\x2\x2GH\au\x2\x2HI\ag\x2\x2I\x6"+
		"\x3\x2\x2\x2JK\a*\x2\x2K\b\x3\x2\x2\x2LM\a+\x2\x2M\n\x3\x2\x2\x2NO\aP"+
		"\x2\x2OP\aQ\x2\x2PQ\aV\x2\x2Q\f\x3\x2\x2\x2RS\a\x43\x2\x2ST\aP\x2\x2T"+
		"U\a\x46\x2\x2U\xE\x3\x2\x2\x2VW\aQ\x2\x2WX\aT\x2\x2X\x10\x3\x2\x2\x2Y"+
		"Z\a?\x2\x2Z\x12\x3\x2\x2\x2[\\\a>\x2\x2\\]\a@\x2\x2]\x14\x3\x2\x2\x2^"+
		"_\a>\x2\x2_`\a?\x2\x2`\x16\x3\x2\x2\x2\x61\x62\a>\x2\x2\x62\x18\x3\x2"+
		"\x2\x2\x63\x64\a@\x2\x2\x64\x65\a?\x2\x2\x65\x1A\x3\x2\x2\x2\x66g\a@\x2"+
		"\x2g\x1C\x3\x2\x2\x2hi\aK\x2\x2ij\aP\x2\x2j\x1E\x3\x2\x2\x2kl\a.\x2\x2"+
		"l \x3\x2\x2\x2mn\a-\x2\x2n\"\x3\x2\x2\x2op\a/\x2\x2p$\x3\x2\x2\x2qr\a"+
		",\x2\x2r&\x3\x2\x2\x2st\a\x31\x2\x2t(\x3\x2\x2\x2uv\a\'\x2\x2v*\x3\x2"+
		"\x2\x2wx\a`\x2\x2x,\x3\x2\x2\x2y{\t\x2\x2\x2zy\x3\x2\x2\x2{\x7F\x3\x2"+
		"\x2\x2|~\t\x3\x2\x2}|\x3\x2\x2\x2~\x81\x3\x2\x2\x2\x7F}\x3\x2\x2\x2\x7F"+
		"\x80\x3\x2\x2\x2\x80.\x3\x2\x2\x2\x81\x7F\x3\x2\x2\x2\x82\x84\t\x4\x2"+
		"\x2\x83\x82\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x85\x83\x3\x2\x2\x2\x85\x86"+
		"\x3\x2\x2\x2\x86\x30\x3\x2\x2\x2\x87\x89\t\x4\x2\x2\x88\x87\x3\x2\x2\x2"+
		"\x89\x8A\x3\x2\x2\x2\x8A\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x8C\x3"+
		"\x2\x2\x2\x8C\x8E\a\x30\x2\x2\x8D\x8F\t\x4\x2\x2\x8E\x8D\x3\x2\x2\x2\x8F"+
		"\x90\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x91\x3\x2\x2\x2\x91\x32\x3\x2"+
		"\x2\x2\x92\x93\x5\x35\x1B\x2\x93\x94\x5\x35\x1B\x2\x94\x95\x5\x35\x1B"+
		"\x2\x95\x96\x5\x35\x1B\x2\x96\x97\a\x31\x2\x2\x97\x98\x5\x35\x1B\x2\x98"+
		"\x99\x5\x35\x1B\x2\x99\x9A\a\x31\x2\x2\x9A\x9B\x5\x35\x1B\x2\x9B\x9C\x5"+
		"\x35\x1B\x2\x9C\x34\x3\x2\x2\x2\x9D\x9E\t\x4\x2\x2\x9E\x36\x3\x2\x2\x2"+
		"\x9F\xA0\a\x31\x2\x2\xA0\xA1\a\x31\x2\x2\xA1\xA5\x3\x2\x2\x2\xA2\xA4\n"+
		"\x5\x2\x2\xA3\xA2\x3\x2\x2\x2\xA4\xA7\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2"+
		"\xA5\xA6\x3\x2\x2\x2\xA6\xA9\x3\x2\x2\x2\xA7\xA5\x3\x2\x2\x2\xA8\xAA\a"+
		"\xF\x2\x2\xA9\xA8\x3\x2\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2"+
		"\xAB\xAC\a\f\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAE\b\x1C\x2\x2\xAE\x38\x3"+
		"\x2\x2\x2\xAF\xB0\t\x6\x2\x2\xB0\xB1\x3\x2\x2\x2\xB1\xB2\b\x1D\x3\x2\xB2"+
		":\x3\x2\x2\x2\xB3\xB8\a$\x2\x2\xB4\xB7\x5=\x1F\x2\xB5\xB7\n\a\x2\x2\xB6"+
		"\xB4\x3\x2\x2\x2\xB6\xB5\x3\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB6\x3\x2"+
		"\x2\x2\xB8\xB9\x3\x2\x2\x2\xB9\xBB\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB"+
		"\xBC\a$\x2\x2\xBC<\x3\x2\x2\x2\xBD\xBE\a^\x2\x2\xBE\xBF\t\b\x2\x2\xBF"+
		">\x3\x2\x2\x2\r\x2z}\x7F\x85\x8A\x90\xA5\xA9\xB6\xB8\x4\x2\x3\x2\b\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace WDCL
