//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\porziod\Documents\Visual Studio 2015\Projects\WDCL\WDCL\WDCL.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace WDCL {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class WDCLLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, NOT=5, AND=6, OR=7, EQ=8, NOTEQ=9, LTEQ=10, 
		LT=11, GTEQ=12, GT=13, IN=14, COMMA=15, PLUS_OP=16, MINUS_OP=17, MUL_OP=18, 
		DIV_OP=19, MOD_OP=20, POW_OP=21, ID=22, INT=23, FLOAT=24, DATE=25, COMMENT=26, 
		WS=27, STRING=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", 
		"LT", "GTEQ", "GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", 
		"MOD_OP", "POW_OP", "ID", "INT", "FLOAT", "DATE", "DIGIT", "COMMENT", 
		"WS", "STRING", "ESC_SEQ", "A", "D", "I", "N", "O", "R", "T"
	};


	public WDCLLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'true'", "'false'", "'('", "')'", null, null, null, "'='", "'<>'", 
		"'<='", "'<'", "'>='", "'>'", null, "','", "'+'", "'-'", "'*'", "'/'", 
		"'%'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "NOT", "AND", "OR", "EQ", "NOTEQ", "LTEQ", 
		"LT", "GTEQ", "GT", "IN", "COMMA", "PLUS_OP", "MINUS_OP", "MUL_OP", "DIV_OP", 
		"MOD_OP", "POW_OP", "ID", "INT", "FLOAT", "DATE", "COMMENT", "WS", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "WDCL.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xDC\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t\x3\t\x3"+
		"\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF"+
		"\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
		"\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x5\x17\x89\n\x17\x3\x17"+
		"\a\x17\x8C\n\x17\f\x17\xE\x17\x8F\v\x17\x3\x18\x6\x18\x92\n\x18\r\x18"+
		"\xE\x18\x93\x3\x19\x6\x19\x97\n\x19\r\x19\xE\x19\x98\x3\x19\x3\x19\x6"+
		"\x19\x9D\n\x19\r\x19\xE\x19\x9E\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3"+
		"\x1C\x3\x1C\a\x1C\xB2\n\x1C\f\x1C\xE\x1C\xB5\v\x1C\x3\x1C\x5\x1C\xB8\n"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3"+
		"\x1E\x3\x1E\a\x1E\xC5\n\x1E\f\x1E\xE\x1E\xC8\v\x1E\x3\x1E\x3\x1E\x3\x1F"+
		"\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3"+
		"&\x2\x2\x2\'\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11"+
		"\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2"+
		"\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x2\x37\x2\x1C\x39\x2\x1D;\x2\x1E=\x2\x2"+
		"?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\x2G\x2\x2I\x2\x2K\x2\x2\x3\x2\x10\x5"+
		"\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x32;\x4\x2"+
		"\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x4\x2$$^^\n\x2$$))^^\x64\x64hhppttvv\x4"+
		"\x2\x43\x43\x63\x63\x4\x2\x46\x46\x66\x66\x4\x2KKkk\x4\x2PPpp\x4\x2QQ"+
		"qq\x4\x2TTtt\x4\x2VVvv\xDA\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2"+
		"\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/"+
		"\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2"+
		"\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x3M\x3\x2\x2\x2\x5R\x3\x2\x2\x2\a"+
		"X\x3\x2\x2\x2\tZ\x3\x2\x2\x2\v\\\x3\x2\x2\x2\r`\x3\x2\x2\x2\xF\x64\x3"+
		"\x2\x2\x2\x11g\x3\x2\x2\x2\x13i\x3\x2\x2\x2\x15l\x3\x2\x2\x2\x17o\x3\x2"+
		"\x2\x2\x19q\x3\x2\x2\x2\x1Bt\x3\x2\x2\x2\x1Dv\x3\x2\x2\x2\x1Fy\x3\x2\x2"+
		"\x2!{\x3\x2\x2\x2#}\x3\x2\x2\x2%\x7F\x3\x2\x2\x2\'\x81\x3\x2\x2\x2)\x83"+
		"\x3\x2\x2\x2+\x85\x3\x2\x2\x2-\x88\x3\x2\x2\x2/\x91\x3\x2\x2\x2\x31\x96"+
		"\x3\x2\x2\x2\x33\xA0\x3\x2\x2\x2\x35\xAB\x3\x2\x2\x2\x37\xAD\x3\x2\x2"+
		"\x2\x39\xBD\x3\x2\x2\x2;\xC1\x3\x2\x2\x2=\xCB\x3\x2\x2\x2?\xCE\x3\x2\x2"+
		"\x2\x41\xD0\x3\x2\x2\x2\x43\xD2\x3\x2\x2\x2\x45\xD4\x3\x2\x2\x2G\xD6\x3"+
		"\x2\x2\x2I\xD8\x3\x2\x2\x2K\xDA\x3\x2\x2\x2MN\av\x2\x2NO\at\x2\x2OP\a"+
		"w\x2\x2PQ\ag\x2\x2Q\x4\x3\x2\x2\x2RS\ah\x2\x2ST\a\x63\x2\x2TU\an\x2\x2"+
		"UV\au\x2\x2VW\ag\x2\x2W\x6\x3\x2\x2\x2XY\a*\x2\x2Y\b\x3\x2\x2\x2Z[\a+"+
		"\x2\x2[\n\x3\x2\x2\x2\\]\x5\x45#\x2]^\x5G$\x2^_\x5K&\x2_\f\x3\x2\x2\x2"+
		"`\x61\x5? \x2\x61\x62\x5\x45#\x2\x62\x63\x5\x41!\x2\x63\xE\x3\x2\x2\x2"+
		"\x64\x65\x5G$\x2\x65\x66\x5I%\x2\x66\x10\x3\x2\x2\x2gh\a?\x2\x2h\x12\x3"+
		"\x2\x2\x2ij\a>\x2\x2jk\a@\x2\x2k\x14\x3\x2\x2\x2lm\a>\x2\x2mn\a?\x2\x2"+
		"n\x16\x3\x2\x2\x2op\a>\x2\x2p\x18\x3\x2\x2\x2qr\a@\x2\x2rs\a?\x2\x2s\x1A"+
		"\x3\x2\x2\x2tu\a@\x2\x2u\x1C\x3\x2\x2\x2vw\x5\x43\"\x2wx\x5\x45#\x2x\x1E"+
		"\x3\x2\x2\x2yz\a.\x2\x2z \x3\x2\x2\x2{|\a-\x2\x2|\"\x3\x2\x2\x2}~\a/\x2"+
		"\x2~$\x3\x2\x2\x2\x7F\x80\a,\x2\x2\x80&\x3\x2\x2\x2\x81\x82\a\x31\x2\x2"+
		"\x82(\x3\x2\x2\x2\x83\x84\a\'\x2\x2\x84*\x3\x2\x2\x2\x85\x86\a`\x2\x2"+
		"\x86,\x3\x2\x2\x2\x87\x89\t\x2\x2\x2\x88\x87\x3\x2\x2\x2\x89\x8D\x3\x2"+
		"\x2\x2\x8A\x8C\t\x3\x2\x2\x8B\x8A\x3\x2\x2\x2\x8C\x8F\x3\x2\x2\x2\x8D"+
		"\x8B\x3\x2\x2\x2\x8D\x8E\x3\x2\x2\x2\x8E.\x3\x2\x2\x2\x8F\x8D\x3\x2\x2"+
		"\x2\x90\x92\t\x4\x2\x2\x91\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93\x91"+
		"\x3\x2\x2\x2\x93\x94\x3\x2\x2\x2\x94\x30\x3\x2\x2\x2\x95\x97\t\x4\x2\x2"+
		"\x96\x95\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3"+
		"\x2\x2\x2\x99\x9A\x3\x2\x2\x2\x9A\x9C\a\x30\x2\x2\x9B\x9D\t\x4\x2\x2\x9C"+
		"\x9B\x3\x2\x2\x2\x9D\x9E\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2\x9E\x9F\x3\x2"+
		"\x2\x2\x9F\x32\x3\x2\x2\x2\xA0\xA1\x5\x35\x1B\x2\xA1\xA2\x5\x35\x1B\x2"+
		"\xA2\xA3\x5\x35\x1B\x2\xA3\xA4\x5\x35\x1B\x2\xA4\xA5\a\x31\x2\x2\xA5\xA6"+
		"\x5\x35\x1B\x2\xA6\xA7\x5\x35\x1B\x2\xA7\xA8\a\x31\x2\x2\xA8\xA9\x5\x35"+
		"\x1B\x2\xA9\xAA\x5\x35\x1B\x2\xAA\x34\x3\x2\x2\x2\xAB\xAC\t\x4\x2\x2\xAC"+
		"\x36\x3\x2\x2\x2\xAD\xAE\a\x31\x2\x2\xAE\xAF\a\x31\x2\x2\xAF\xB3\x3\x2"+
		"\x2\x2\xB0\xB2\n\x5\x2\x2\xB1\xB0\x3\x2\x2\x2\xB2\xB5\x3\x2\x2\x2\xB3"+
		"\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB7\x3\x2\x2\x2\xB5\xB3\x3\x2"+
		"\x2\x2\xB6\xB8\a\xF\x2\x2\xB7\xB6\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8"+
		"\xB9\x3\x2\x2\x2\xB9\xBA\a\f\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xBC\b\x1C\x2"+
		"\x2\xBC\x38\x3\x2\x2\x2\xBD\xBE\t\x6\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\xC0"+
		"\b\x1D\x3\x2\xC0:\x3\x2\x2\x2\xC1\xC6\a$\x2\x2\xC2\xC5\x5=\x1F\x2\xC3"+
		"\xC5\n\a\x2\x2\xC4\xC2\x3\x2\x2\x2\xC4\xC3\x3\x2\x2\x2\xC5\xC8\x3\x2\x2"+
		"\x2\xC6\xC4\x3\x2\x2\x2\xC6\xC7\x3\x2\x2\x2\xC7\xC9\x3\x2\x2\x2\xC8\xC6"+
		"\x3\x2\x2\x2\xC9\xCA\a$\x2\x2\xCA<\x3\x2\x2\x2\xCB\xCC\a^\x2\x2\xCC\xCD"+
		"\t\b\x2\x2\xCD>\x3\x2\x2\x2\xCE\xCF\t\t\x2\x2\xCF@\x3\x2\x2\x2\xD0\xD1"+
		"\t\n\x2\x2\xD1\x42\x3\x2\x2\x2\xD2\xD3\t\v\x2\x2\xD3\x44\x3\x2\x2\x2\xD4"+
		"\xD5\t\f\x2\x2\xD5\x46\x3\x2\x2\x2\xD6\xD7\t\r\x2\x2\xD7H\x3\x2\x2\x2"+
		"\xD8\xD9\t\xE\x2\x2\xD9J\x3\x2\x2\x2\xDA\xDB\t\xF\x2\x2\xDBL\x3\x2\x2"+
		"\x2\r\x2\x88\x8B\x8D\x93\x98\x9E\xB3\xB7\xC4\xC6\x4\x2\x3\x2\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace WDCL
